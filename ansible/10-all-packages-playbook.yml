---
- hosts: nodeAll
  become: yes
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - ntp

  - name: Add apt signing keys for Docker and kubeadm/kubectl/kubelet
    apt_key:
      url: "{{ item }}"
      state: present
    with_items:
      - "https://download.docker.com/linux/ubuntu/gpg"
      - "https://packages.cloud.google.com/apt/doc/apt-key.gpg"

  - name: Add apt repositories
    apt_repository:
      repo: "{{ item }}"
      state: present
    with_items:
      - "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
      - "deb https://apt.kubernetes.io/ kubernetes-xenial main"

  - name: Install docker and its dependecies, and kubeadm/kubectl/kubelet
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
      - "kubeadm=1.18.3-00"  # verify: adding version pin to this version, i.e. "apt-mark hold kubeadm"
      - "kubectl=1.18.3-00"
      - "kubelet=1.18.3-00"

  - name: Add the default user to group docker
    user:
      name: ubuntu
      groups: docker
      append: yes

  # see https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker
  - name: setup the docker daemon (use systemd as cgroup driver)
    copy:
      src: './templates/docker.json'
      dest: /etc/docker/daemon.json

  - name: setup the docker daemon
    file:
      path: /etc/systemd/system/docker.service.d
      state: directory
    notify:
      - restart docker

  - name: Letting iptables see bridged traffic
    copy:
      content: |
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
      dest: /etc/sysctl.d/k8s.conf
      mode: "0644"

  handlers:
    - name: restart docker
      systemd: name=docker daemon_reload=yes enabled=yes state=restarted
