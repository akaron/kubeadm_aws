---
# tasks file for k8s
- name: Install calico CNI
  command: kubectl apply -f https://docs.projectcalico.org/v3.14/manifests/calico.yaml
  environment:
    KUBECONFIG: "{{ kubeconfig }}"

  # For other CNI (may need to change the podSubnet in `templates/aws.yml.j2`)
  # shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  # command: kubectl create -f https://raw.githubusercontent.com/cilium/cilium/v1.6/install/kubernetes/quick-install.yaml
  # command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

- name: Deploy standard storageClass
  k8s:
    state: present
    definition:
      kind: StorageClass
      apiVersion: storage.k8s.io/v1beta1
      metadata:
        name: standard
      provisioner: kubernetes.io/aws-ebs
      parameters:
        type: gp2
    apply: yes
    kubeconfig: "{{ kubeconfig }}"

- name: Deploy standard storageClass for first AZ
  k8s:
    state: present
    definition:
      kind: StorageClass
      apiVersion: storage.k8s.io/v1beta1
      metadata:
        name: standard-a
      provisioner: kubernetes.io/aws-ebs
      parameters:
        type: gp2
      allowedTopologies:
      - matchLabelExpressions:
        - key: failure-domain.beta.kubernetes.io/zone
          values:
          - "{{ aws_region }}a"
    apply: yes
    kubeconfig: "{{ kubeconfig }}"

- name: Install ingress-nginx controller
  block:
  - name: mkdir cache folder for definition file
    file:
      path: ./deploy_cache
      state: directory

  - name: Get ingress-nginx controller definition
    get_url:
      url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-0.32.0/deploy/static/provider/aws/deploy.yaml
      dest: ./deploy_cache/nginx-ingress-controller-0_32_0.yaml
      mode: '0644'

  - name: Deploy Ingress Controller
    k8s:
      apply: yes
      src: ./deploy_cache/nginx-ingress-controller-0_32_0.yaml
      kubeconfig: "{{ kubeconfig }}"

  - debug:
      msg:
      - "* Please wait a few minutes for AWS to generate a Network Load Balancer (NLB)"
      - "* By default the ingress-nginx controller is deployed in a worker-node"
